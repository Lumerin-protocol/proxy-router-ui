variables:
  REPOSITORY_URL: 092029861612.dkr.ecr.us-east-1.amazonaws.com/titan-proxy-router-ui
  CI_AWS_ECS_CLUSTER: titan-proxy-router
  CI_AWS_ECS_SERVICE: titan-proxy-router-ui-service
  CI_AWS_ECS_TASK_DEFINITION: titan-proxy-router-ui-task

stages:
    - build
    - deploy

before_script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_DEFAULT_REGION
    - eval $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION | sed 's|https://||')
    - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"

build-development:
    stage: build
    only: 
        - development
    tags:
        - dedicated
        - amd
    script:
        - echo "Pruning images..."
        - docker image prune -f
        - echo "Building image..."
        - docker build -t $REPOSITORY_URL:latest .
        - echo "Tagging image..."
        - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$IMAGE_TAG
        - echo "Pushing image..."
        - docker push $REPOSITORY_URL:latest
        - docker push $REPOSITORY_URL:$IMAGE_TAG

deploy-development:
    stage: deploy
    only: 
        - development
    tags:
        - dedicated
    script:
        - echo $REPOSITORY_URL:$IMAGE_TAG
        - aws ecs describe-task-definition --region $AWS_DEFAULT_REGION --task-definition $CI_AWS_ECS_TASK_DEFINITION > input.json
        - echo $(cat input.json | jq '.taskDefinition.containerDefinitions[].image="'$REPOSITORY_URL:$IMAGE_TAG'"') > input.json
        - echo $(cat input.json | jq '.taskDefinition') > input.json
        - echo $(cat input.json | jq  'del(.taskDefinitionArn)' | jq 'del(.revision)' | jq 'del(.status)' | jq 'del(.requiresAttributes)' | jq 'del(.compatibilities)') > input.json
        - echo "Registering new container definition..."
        - aws ecs register-task-definition --region $AWS_DEFAULT_REGION --cli-input-json file://input.json
        - REVISION=$(aws ecs describe-task-definition --task-definition $CI_AWS_ECS_TASK_DEFINITION --region $AWS_DEFAULT_REGION | egrep "revision" | tr "/" " " | awk '{print $2}' | sed 's/"$//' | cut -d "," -f 1)
        - echo "Updating the service..."
        - aws ecs update-service --region $AWS_DEFAULT_REGION --cluster $CI_AWS_ECS_CLUSTER --service $CI_AWS_ECS_SERVICE --task-definition $CI_AWS_ECS_TASK_DEFINITION:$REVISION
